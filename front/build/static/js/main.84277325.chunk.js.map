{"version":3,"sources":["views/Home.js","views/About.js","actions/actions.js","components/Picker.js","components/Posts.js","views/OneUser.js","routes/routes.js","components/layout/index.js","routes/index.js","reducers/reducer.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","index_es","container","spacing","className","style","textAlign","variant","primary","secondary","marginLeft","marginRight","Component","Transition","props","Object","assign","direction","About","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","info","user","Axios","get","concat","login","then","res","data","setState","details","open","table","repos","openTable","handleTableClose","addMoreUsers","state","per_page","since","nextPage","split","users","response","prevState","handleClose","number","currentPage","reposPerPage","bind","assertThisInitialized","handleClick","_this2","event","Number","target","id","_this3","_this$state","classes","indexOfLastClient","indexOfFirstClient","render","slice","map","repo","index","component","key","button","onClick","handleChildOpen","inset","name","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","float","padding","display","fullScreen","list","alignItems","alt","src","avatar_url","color","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","item","avatar","date","href","profile","autoFocus","xl","REQUEST_POSTS","RECEIVE_POSTS","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","receivePosts","subreddit","json","console","log","type","posts","receivedAt","Date","now","fetchPosts","dispatch","requestPosts","fetch","shouldFetchPosts","postsBySubreddit","isFetching","didInvalidate","fetchPostsIfNeeded","getState","Picker","_this$props","value","onChange","options","position","label","e","margin","Posts","names","post","url","Reddit","width","height","updateWindowDimensions","handleChange","handleRefreshClick","selectedSubreddit","window","addEventListener","removeEventListener","innerWidth","innerHeight","prevProps","_this$props2","nextSubreddit","preventDefault","_this$props3","_this$props4","lastUpdated","maxWidth","components_Picker","toLocaleTimeString","opacity","Posts_Posts","connect","_ref","items","routes","path","icon","Sidebar","mobileOpen","handleDrawerToggle","drawer","toolbar","route","itens","Link","to","root","appBar","aria-label","menuButton","Menu_default","smUp","implementation","paper","drawerPaper","xsDown","content","children","React","withStyles","theme","defineProperty","breakpoints","up","flexShrink","zIndex","backgroundColor","mixins","flexGrow","unit","marginTop","borderRadius","withTheme","AppRoutes","routeComponents","Route","exact","BrowserRouter","layout","rootReducer","combineReducers","arguments","undefined","action","loggerMiddleware","createLogger","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","App","es","src_routes","Boolean","location","hostname","match","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84277325.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    Avatar,\r\n    ListItemText,\r\n    Card\r\n} from '@material-ui/core';\r\n\r\n// import { Container } from './styles';\r\nimport \"../assets/index.css\"\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <div>\r\n                    <Grid container spacing={24}>\r\n                        <div className=\"container\">\r\n                            <Typography\r\n                                style={{\r\n                                textAlign: 'center'\r\n                            }}\r\n                                variant=\"h4\">\r\n                                <p className=\"header\">Shaw and Partners full stack challenge</p>\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"listContainer\">\r\n                            <List>\r\n                                <ListItem>\r\n                                    <Avatar>\r\n                                        <i className=\"fas fa-server\"></i>\r\n                                    </Avatar>\r\n                                    <ListItemText primary=\"1º - Do The Backend\" secondary=\"It's a little scary\"/>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Avatar>\r\n                                        <i className=\"fas fa-object-group\"></i>\r\n                                    </Avatar>\r\n                                    <ListItemText primary=\"2º - Do the Front-End\" secondary=\"A bit less scary\"/>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <Avatar>\r\n                                        <i className=\"fas fa-smile-wink\"></i>\r\n                                    </Avatar>\r\n                                    <ListItemText primary=\"3º - Work happy\" secondary=\"Don't worry, be happy\"/>\r\n                                </ListItem>\r\n                            </List>\r\n                            \r\n                        </div>\r\n                    </Grid>\r\n                    <hr style={{marginLeft: 15, marginRight: 15}}/>\r\n                </div>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Card,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    Avatar,\r\n    ListItemText,\r\n    Grid,\r\n    withStyles,\r\n    InputBase,\r\n    Button,\r\n    Slide,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    Divider, \r\n    ListItemIcon, \r\n    Collapse\r\n} from '@material-ui/core';\r\nimport Axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing.unit * 4,\r\n    },\r\n  });\r\n  \r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props}/>;\r\n}\r\n\r\nexport default class About extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            per_page: 30,\r\n            number: 15,\r\n            users: [],\r\n            open: false,\r\n            openTable: false,\r\n            details: [],\r\n            since: 0,\r\n            repos: [],\r\n            currentPage: 1,\r\n            reposPerPage: 3\r\n        };\r\n        this.addMoreUsers = this\r\n            .addMoreUsers\r\n            .bind(this)\r\n        this.handleClick = this\r\n            .handleClick\r\n            .bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios\r\n            .get(`https://s-a-p.herokuapp.com/api/users?per_page=${this.state.per_page}`)\r\n            .then(res => {\r\n                const next = res.data.nextPage[0]\r\n                const since = next.split('&')[1];\r\n                //console.log(since);\r\n                this.setState({since})\r\n                const users = res.data.response;\r\n                this.setState({users});\r\n            });\r\n    }\r\n\r\n    info = (user) => {\r\n        Axios\r\n            .get(`https://s-a-p.herokuapp.com/api/user/details?name=${user.login}`)\r\n            .then(res => {\r\n                const data = res.data.res\r\n\r\n                this.setState({details: data})\r\n            })\r\n        this.setState({open: true});\r\n    };\r\n\r\n    handleClick(event) {\r\n\r\n        this.setState({\r\n            currentPage: Number(event.target.id)\r\n        });\r\n    }\r\n\r\n    table = (user) => {\r\n        Axios\r\n            .get(`https://api.github.com/users/${user.login}/repos`)\r\n            .then(res => {\r\n                const data = res.data\r\n                //console.log(data);\r\n                this.setState({repos: data})\r\n            })\r\n        this.setState({openTable: true});\r\n    }\r\n\r\n    handleTableClose = () => {\r\n        this.setState({openTable: false});\r\n    };\r\n    addMoreUsers = () => {\r\n\r\n        //console.log();\r\n        Axios\r\n            .get(`https://s-a-p.herokuapp.com/api/users?per_page=${this.state.per_page}&${this.state.since}`)\r\n            .then(res => {\r\n                const next = res.data.nextPage[0]\r\n                const since = next.split('&')[1];\r\n                //console.log(since);\r\n                this.setState({since})\r\n                const users = res.data.response;\r\n                var a = this\r\n                    .state\r\n                    .users\r\n                    .concat(users)\r\n                this.setState({users: a});\r\n            });\r\n\r\n        this.setState((prevState) => ({\r\n            per_page: prevState.per_page + 2\r\n        }));\r\n\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const {users, details, repos, currentPage, reposPerPage} = this.state\r\n\r\n        const indexOfLastClient = currentPage * reposPerPage;\r\n        const indexOfFirstClient = indexOfLastClient - reposPerPage;\r\n        const currentUsers = repos.slice(indexOfFirstClient, indexOfLastClient);\r\n\r\n        const render = currentUsers.map((repo, index) => {\r\n            return (\r\n                <Grid spacing={12}>\r\n                    <List component=\"nav\" key={index}>\r\n                        <List component=\"nav\">\r\n                            <ListItem button onClick={this.handleChildOpen}>\r\n                                <ListItemIcon>\r\n                                    <i className=\"fas fa-code-branch\"/>\r\n                                </ListItemIcon>\r\n                                <ListItemText inset primary={repo.name}/>\r\n                                </ListItem>\r\n                        </List>\r\n                    </List>\r\n                </Grid>\r\n\r\n            )\r\n        })\r\n\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(repos.length / reposPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n        //TODO: Style this\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            return (\r\n                <li\r\n                    style={{\r\n                    float: \"left\",\r\n                    padding: 9,\r\n                    display: 'inline'\r\n                }}\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={this.handleClick}>\r\n                    {number}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        const data = users\r\n        const {fullScreen} = this.props;\r\n        const list = data.map((user, index) => {\r\n            return (\r\n                <div className=\"content\">\r\n                    <List>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemAvatar>\r\n                                <Avatar alt=\"Remy Sharp\" src={user.avatar_url}/>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={`${user.login} - #${user.id}`}\r\n                                secondary={< div className = \"tooltip\" > <small>\r\n                                <Button\r\n                                    onClick={() => this.info(user, index)}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\">\r\n                                    <i className=\"fas fa-info-circle\"></i>\r\n                                </Button>\r\n                                <Button\r\n                                    onClick={() => this.table(user, index)}\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\">\r\n                                    <i className=\"fas fa-bug\"></i>\r\n                                </Button>\r\n                            </small> </div>}/>\r\n                        </ListItem>\r\n                        <Dialog\r\n                            open={this.state.open}\r\n                            TransitionComponent={Transition}\r\n                            keepMounted\r\n                            onClose={this.handleClose}\r\n                            aria-labelledby=\"alert-dialog-slide-title\"\r\n                            aria-describedby=\"alert-dialog-slide-description\">\r\n                            <DialogTitle id=\"alert-dialog-slide-title\">\r\n                                <h4>\r\n                                    {details.login}</h4>\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <div className=\"modal\">\r\n                                    <Grid container spacing={24}>\r\n                                        <Grid item spacing={6}>\r\n                                            <img id=\"img\" src={details.avatar}></img>\r\n                                        </Grid>\r\n                                        <Grid item spacing={6}>\r\n                                            <div id=\"content\">\r\n                                                <List>\r\n                                                    <ListItem>\r\n                                                        <b>Name:</b>{\" \"} {details.name}\r\n                                                    </ListItem>\r\n                                                    <ListItem>\r\n                                                        <b>ID:</b>{\" \"} {'#' + details.id}\r\n                                                    </ListItem>\r\n                                                    <ListItem>\r\n                                                        <b>Member since:</b>{\" \"}\r\n                                                        <p>{details.date}</p>\r\n                                                    </ListItem>\r\n                                                </List>\r\n                                            </div>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button target=\"_blank\" href={details.profile} color=\"primary\">\r\n                                    Profile\r\n                                </Button>\r\n                                <Button onClick={this.handleClose} color=\"primary\">\r\n                                    Close\r\n                                </Button>\r\n\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                        <Dialog\r\n                            fullScreen={fullScreen}\r\n                            open={this.state.openTable}\r\n                            onClose={this.handleClose}\r\n                            aria-labelledby=\"responsive-dialog-title\">\r\n                            <DialogTitle id=\"responsive-dialog-title\">{\"Public Repos\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                {render}\r\n                            </DialogContent>\r\n                            <ul className=\"pagination\">\r\n                                {renderPageNumbers} \r\n                            </ul>\r\n                           \r\n                            <DialogActions>\r\n                                <Button onClick={this.handleTableClose} color=\"primary\" autoFocus>\r\n                                    Close\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </List>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <Card container>\r\n                <Grid container spacing={12}>\r\n                    {list}\r\n                </Grid>\r\n                <Grid container xl={12}>\r\n                    <Grid item xl={6}>\r\n                        <Button variant=\"flat\" onClick={this.addMoreUsers} color=\"secondary\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import fetch from 'cross-fetch'\r\n//Reddit Fetch\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\r\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\r\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\r\n\r\n//GitHub Fetch\r\nexport const REQUEST_USER = 'REQUEST_USER'\r\nexport const RECEIVE_USER = 'RECEIVE_USER'\r\nexport const SELECT_USER = 'SELECT_USER'\r\nexport const INVALIDATE_USER = 'INVALIDATE_USER'\r\n\r\n//Reddit\r\nexport function selectSubreddit(subreddit) {\r\n    return {type: SELECT_SUBREDDIT, subreddit}\r\n}\r\n\r\n//Git\r\nexport function selectUser(user) {\r\n    return {type: SELECT_USER, user}\r\n}\r\n\r\n//Reddit\r\nexport function invalidateSubreddit(subreddit) {\r\n    return {type: INVALIDATE_SUBREDDIT, subreddit}\r\n}\r\n\r\n//Git\r\nexport function invalidateUser(user) {\r\n    return {type: INVALIDATE_USER, user}\r\n}\r\n\r\n//Reddit\r\nfunction requestPosts(subreddit) {\r\n    return {type: REQUEST_POSTS, subreddit}\r\n}\r\n\r\n//Git\r\nfunction requestUser(user) {\r\n    return {type: REQUEST_USER, user}\r\n}\r\n\r\nfunction receivePosts(subreddit, json) {\r\n    console.log(json)\r\n    return {\r\n        type: RECEIVE_POSTS,\r\n        subreddit,\r\n        posts: json,\r\n        receivedAt: Date.now()\r\n    }\r\n}\r\n\r\n//Git\r\nfunction receiveUser(user, json) {\r\n    return {\r\n        type: RECEIVE_USER,\r\n        user,\r\n        posts: json\r\n            .res\r\n            .children,\r\n        receivedAt: Date.now()\r\n    }\r\n}\r\n\r\n//Reddit\r\nfunction fetchPosts(subreddit) {\r\n    return dispatch => {\r\n        dispatch(requestPosts(subreddit))\r\n        //Any domain should be here\r\n        return fetch(`https://s-a-p.herokuapp.com/api/user/repos?name=${subreddit}`)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(receivePosts(subreddit, json.res)))\r\n    }\r\n}\r\n\r\n//Git\r\nfunction fetchUser(user) {\r\n    return dispatch => {\r\n        dispatch(requestUser(user))\r\n        //Any domain should be here\r\n        return fetch(``)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(receivePosts(user, json)))\r\n    }\r\n}\r\n//TODO:\r\nfunction shouldFetchPosts(state, user) {\r\n    const users = state.postsBySubreddit[user]\r\n    if (!users) {\r\n        return true\r\n    } else if (users.isFetching) {\r\n        return false\r\n    } else {\r\n        return users.didInvalidate\r\n    }\r\n}\r\n\r\n\r\nexport function fetchPostsIfNeeded(subreddit) {\r\n    return (dispatch, getState) => {\r\n        if (shouldFetchPosts(getState(), subreddit)) {\r\n            return dispatch(fetchPosts(subreddit))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchUsersIfNeeded(user) {\r\n    return (dispatch, getState) => {\r\n        if (shouldFetchPosts(getState(), user)) {\r\n            return dispatch(fetchPosts(user))\r\n        }\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    FormControl,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport \"../assets/index.css\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    bootstrapFormLabel: {\r\n        fontSize: 18\r\n    }\r\n});\r\nclass Picker extends Component {\r\n    render() {\r\n        const {value, onChange, options} = this.props\r\n        const classes = styles\r\n        return (\r\n            <span>\r\n                <h1\r\n                    className=\"header\"\r\n                    style={{\r\n                    textAlign: 'center',\r\n                    position: 'relative'\r\n                }}>{value}</h1>\r\n                <FormControl >\r\n                    <TextField\r\n                        id=\"outlined-email-input\"\r\n                        label=\"User\"\r\n                        onChange={e => onChange(e.target.value)}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"/>\r\n                        {\r\n                            /*\r\n                             <InputLabel\r\n                        htmlFor=\"age-customized-select\"\r\n                        className={classes.bootstrapFormLabel}>\r\n                        Reedit\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={value}\r\n                        \r\n                        input={< BootstrapInput name = \"age\" id = \"age-customized-select\" />}>\r\n                        <MenuItem value=\"\">\r\n                            <em>---</em>\r\n                        </MenuItem>\r\n                        {options.map(option => (\r\n                            <MenuItem value={option} key={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                            */\r\n                        }\r\n                </FormControl>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nPicker.propTypes = {\r\n    options: PropTypes\r\n        .arrayOf(PropTypes.string.isRequired)\r\n        .isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Picker;","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../assets/index.css\";\r\nimport {List} from \"@material-ui/core\";\r\nexport default class Posts extends Component {\r\n    render() {\r\n\r\n        const data = this.props.names\r\n        return (\r\n            <ul>\r\n                {[data].map((post, i) => (\r\n                    <li key={i}>\r\n                        <p onClick={() => console.log('aaaa')}>{post}</p>\r\n                        <a target=\"blank\" href={post.url}>{post.url}</a>\r\n\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPosts.propTypes = {\r\n    posts: PropTypes.array.isRequired\r\n};","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectSubreddit, fetchPostsIfNeeded, invalidateSubreddit} from \"../actions/actions\";\r\nimport Picker from \"../components/Picker\";\r\nimport Posts from \"../components/Posts\";\r\nimport {CircularProgress, Grid} from \"@material-ui/core\";\r\n\r\nimport \"../assets/index.css\";\r\nclass Reddit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n        this.updateWindowDimensions = this\r\n            .updateWindowDimensions\r\n            .bind(this);\r\n        this.handleChange = this\r\n            .handleChange\r\n            .bind(this);\r\n        this.handleRefreshClick = this\r\n            .handleRefreshClick\r\n            .bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch, selectedSubreddit} = this.props;\r\n        dispatch(fetchPostsIfNeeded(selectedSubreddit));\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({width: window.innerWidth, height: window.innerHeight});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.selectedSubreddit !== prevProps.selectedSubreddit) {\r\n            const {dispatch, selectedSubreddit} = this.props;\r\n            dispatch(fetchPostsIfNeeded(selectedSubreddit));\r\n        }\r\n    }\r\n\r\n    handleChange(nextSubreddit) {\r\n        this\r\n            .props\r\n            .dispatch(selectSubreddit(nextSubreddit));\r\n        this\r\n            .props\r\n            .dispatch(fetchPostsIfNeeded(nextSubreddit));\r\n    }\r\n\r\n    handleRefreshClick(e) {\r\n        e.preventDefault();\r\n\r\n        const {dispatch, selectedSubreddit} = this.props;\r\n        dispatch(invalidateSubreddit(selectedSubreddit));\r\n        dispatch(fetchPostsIfNeeded(selectedSubreddit));\r\n    }\r\n\r\n    render() {\r\n        const {selectedSubreddit, posts, isFetching, lastUpdated} = this.props;\r\n    \r\n        const repos = posts.name\r\n        return (\r\n            <div\r\n                className=\"container\"\r\n                style={{\r\n                maxWidth: this.state.width\r\n            }}>\r\n                <Grid container>\r\n                    <div>\r\n                        <Picker\r\n                            value={selectedSubreddit}\r\n                            onChange={this.handleChange}\r\n                            options={[\r\n                            \"leagueOfLegends\",\r\n                            \"LeagueOfMemes\",\r\n                        ]}/>\r\n                        <p>\r\n                            {lastUpdated && (\r\n                                <span onClick={() => {\r\n                                    console.log(this.props.posts)\r\n                                }}>\r\n                                    Último reload em: {new Date(lastUpdated).toLocaleTimeString()}.{\" \"}\r\n                                </span>\r\n                            )}\r\n                            {!isFetching && (\r\n                                <button onClick={this.handleRefreshClick}>Reload</button>\r\n                            )}\r\n                        </p>\r\n                    </div>\r\n\r\n                </Grid>\r\n                <Grid container>\r\n                    <div>\r\n                        {isFetching && [repos].length === 0 && <CircularProgress/>}\r\n                        {!isFetching && [posts].length === 0 && <h2>Empty.</h2>}\r\n                        {posts.length > 0 && (\r\n                            <div \r\n                            className=\"content\"\r\n                                style={{\r\n                                opacity: isFetching\r\n                                    ? 0.5\r\n                                    : 1,\r\n                                maxWidth: this.state.width\r\n                                \r\n                            }}>\r\n                                <Posts posts={posts}/>\r\n                                \r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReddit.propTypes = {\r\n    selectedSubreddit: PropTypes.string.isRequired,\r\n    posts: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n    lastUpdated: PropTypes.number,\r\n    dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {selectedSubreddit, postsBySubreddit} = state;\r\n    const {isFetching, lastUpdated, items: posts} = postsBySubreddit[selectedSubreddit] || {\r\n        isFetching: true,\r\n        items: []\r\n    };\r\n\r\n    return {selectedSubreddit, posts, isFetching, lastUpdated};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Reddit);","import Home from \"../views/Home.js\";\r\nimport About from \"../views/About.js\";\r\nimport Details from \"../views/OneUser.js\"\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        name: \"Home\",\r\n        icon: \"fas fa-home\",\r\n        component: Home\r\n    }, {\r\n        path: '/git',\r\n        name: \"Users\",\r\n        icon: \"fab fa-github\",\r\n        component: About\r\n    }\r\n    /*, {\r\n        path: '/details', \r\n        name: 'Info', \r\n        icon: \"fas fa-info-circle\", \r\n        component: Details\r\n    }*/\r\n    /* And so on. */\r\n];\r\n\r\nexport default routes;","//Layout of the page, simple responsive Drawer and AppBar from Material UI\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\"\r\nimport Menu from '@material-ui/icons/Menu';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    MenuList,\r\n    MenuItem,\r\n    Toolbar,\r\n    IconButton,\r\n    Hidden,\r\n    Drawer,\r\n    CssBaseline,\r\n    AppBar\r\n} from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    drawer: {\r\n        [\r\n            theme\r\n                .breakpoints\r\n                .up('sm')\r\n        ]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        }\r\n    },\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        zIndex: '999999',\r\n        backgroundColor: '#0c0b0b'\r\n    },\r\n    menuButton: {\r\n        marginRight: 20,\r\n        [\r\n            theme\r\n                .breakpoints\r\n                .up('sm')\r\n        ]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        padding: 10\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        backgroundColor: '#eef0f2'\r\n    },\r\n    itens: {\r\n        marginTop: 10,\r\n        borderRadius: 25\r\n    }\r\n});\r\n\r\nclass Sidebar extends React.Component {\r\n    state = {\r\n        mobileOpen: false,\r\n        height: 0, \r\n        width: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        try {\r\n            this.setState({width: window.innerWidth, height: window.innerHeight});\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        \r\n    }\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({\r\n            mobileOpen: !state.mobileOpen\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        const routes = this.props.routes\r\n        const drawer = (\r\n            <div>\r\n                <div className={classes.toolbar}/>\r\n                <MenuList>\r\n\r\n                    {routes.map((route, index) => (\r\n                        <MenuItem className={classes.itens} component={Link} to={route.path}>\r\n                            <IconButton>\r\n                                <i className={route.icon}></i>\r\n                            </IconButton>\r\n\r\n                            {route.name}\r\n\r\n                        </MenuItem>\r\n                    ))}\r\n\r\n                </MenuList>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline>\r\n                    <AppBar position=\"fixed\" className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"Open drawer\"\r\n                                onClick={this.handleDrawerToggle}\r\n                                className={classes.menuButton}>\r\n                                <Menu/>\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <nav className={classes.drawer}>\r\n                        {/* */}\r\n                        <Hidden smUp implementation=\"css\">\r\n                            <Drawer\r\n                                container={this.props.container}\r\n                                variant=\"temporary\"\r\n                                open={this.state.mobileOpen}\r\n                                onClose={this.handleDrawerToggle}\r\n                                classes={{\r\n                                paper: classes.drawerPaper\r\n                            }}>\r\n                                {drawer}\r\n                            </Drawer>\r\n                        </Hidden>\r\n                        <Hidden xsDown implementation=\"css\">\r\n                            <Drawer\r\n                                classes={{\r\n                                paper: classes.drawerPaper\r\n                            }}\r\n                                variant=\"permanent\"\r\n                                open>\r\n                                {drawer}\r\n                            </Drawer>\r\n                        </Hidden>\r\n                    </nav>\r\n                    <main\r\n                        id=\"container\"\r\n                        style={{\r\n                        height: this.state.height\r\n                    }}\r\n                        className={classes.content}>\r\n                        <div className={classes.toolbar}/> {this.props.children}\r\n                    </main>\r\n                </CssBaseline>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    container: PropTypes.object,\r\n    theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, {withTheme: true})(Sidebar);\r\n","import React, {Component} from \"react\";\r\nimport {Route, BrowserRouter} from \"react-router-dom\";\r\nimport routes from \"./routes.js\";\r\nimport Sidebar from \"../components/layout/index.js\";\r\nclass AppRoutes extends Component {\r\n\r\n    render() {\r\n        const routeComponents = routes.map(({\r\n            path,\r\n            component\r\n        }, key) => <Route exact path={path} component={component} key={key}/>);\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <Sidebar routes={routes}>\r\n                    <div>\r\n                        <div className=\"content\">\r\n                            {routeComponents}\r\n                        </div>\r\n                    </div>\r\n                </Sidebar>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppRoutes","import { combineReducers } from \"redux\";\r\nimport {\r\n  SELECT_SUBREDDIT,\r\n  INVALIDATE_SUBREDDIT,\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS\r\n} from \"../actions/actions\";\r\n\r\nfunction selectedSubreddit(state = \"RyanGostosaum\", action) {\r\n  switch (action.type) {\r\n    case SELECT_SUBREDDIT:\r\n      return action.subreddit;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction posts(\r\n  state = {\r\n    isFetching: false,\r\n    didInvalidate: false,\r\n    items: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n      return Object.assign({}, state, {\r\n        didInvalidate: true\r\n      });\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        didInvalidate: false\r\n      });\r\n    case RECEIVE_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        didInvalidate: false,\r\n        items: action.posts,\r\n        lastUpdated: action.receivedAt\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction postsBySubreddit(state = {}, action) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n    case RECEIVE_POSTS:\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        [action.subreddit]: posts(state[action.subreddit], action)\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  postsBySubreddit,\r\n  selectedSubreddit\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from '../reducers/reducer'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nexport default function configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}","import React, {Component} from 'react';\nimport AppRoutes from './routes/index.js';\n\nimport 'babel-polyfill';\n//Redux stuff\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore()\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <AppRoutes/>\n            </Provider>\n        \n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}